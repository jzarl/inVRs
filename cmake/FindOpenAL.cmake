if (NOT FIND_OPENAL_LOADED)

include (${INVRS_SOURCE_DIR}/cmake/FindHelperMacros.cmake)

if (WIN32)
  set (OPENAL_PREDEF_PATHS "C:/Program\ Files/OpenAL\ 1.1\ SDK" "C:/Programme/OpenAL\ 1.1\ SDK")
  set (OPENAL_PREDEF_INCLUDE_SUFFIX include)
  FIND_INCLUDE_DIR_MACRO (OpenAL OPENAL al.h OPENAL_PREDEF_PATHS OPENAL_PREDEF_INCLUDE_SUFFIX)
  set (ALUT_PREDEF_PATHS "C:/Program\ Files/freealut-1.1.0-bin" "C:/Programme/freealut-1.1.0-bin")
  set (ALUT_PREDEF_INCLUDE_SUFFIX include/AL)
  FIND_INCLUDE_DIR_MACRO ("OpenAL ALUT" OPENAL_ALUT alut.h ALUT_PREDEF_PATHS ALUT_PREDEF_INCLUDE_SUFFIX)

  set (OPENAL_PREDEF_LIBRARY_SUFFIX lib)
  FIND_LIBRARY_MACRO (OpenAL OPENAL OpenAL32 OPENAL_PREDEF_PATHS OPENAL_PREDEF_LIBRARY_SUFFIX)
  set (ALUT_PREDEF_LIBRARY_SUFFIX lib)
  FIND_LIBRARY_MACRO ("OpenAL ALUT" OPENAL alut ALUT_PREDEF_PATHS ALUT_PREDEF_LIBRARY_SUFFIX)

  set (OPENAL_INCLUDE_DIRS ${OPENAL_INCLUDE_DIR} ${OPENAL_ALUT_INCLUDE_DIR})
  set (OPENAL_LIBRARIES ${OPENAL_OpenAL32_LIBRARY} ${OPENAL_alut_LIBRARY})

elseif (APPLE AND ${CMAKE_SYSTEM_NAME} MATCHES "Darwin")
  set (OPENAL_PREDEF_INCLUDE_SUFFIX AL)
  FIND_INCLUDE_DIR_MACRO (OpenAL OPENAL al.h EMPTY OPENAL_PREDEF_INCLUDE_SUFFIX)
  FIND_INCLUDE_DIR_MACRO ("OpenAL ALUT" OPENAL_ALUT alut.h EMPTY OPENAL_PREDEF_INCLUDE_SUFFIX)

# TODO: CHECK HOW THIS IS DONE ON MACs
#  SET(GLUT_glut_LIBRARY "-framework GLUT" CACHE STRING "GLUT library for OSX")

  set (OPENAL_INCLUDE_DIRS ${OPENAL_INCLUDE_DIR} ${OPENAL_ALUT_INCLUDE_DIR})

elseif (UNIX)
  
  FIND_INCLUDE_DIR_MACRO (OpenAL OPENAL AL/al.h EMPTY EMPTY)
  FIND_INCLUDE_DIR_MACRO ("OpenAL ALUT" OPENAL_ALUT AL/alut.h OPENAL_INCLUDE_DIR EMTPY)

  FIND_LIBRARY_MACRO (OpenAL OPENAL openal EMPTY EMPTY)
  FIND_LIBRARY_MACRO ("OpenAL ALUT" OPENAL alut OPENAL_LIBRARY_DIR EMPTY)

  set (OPENAL_INCLUDE_DIRS ${OPENAL_INCLUDE_DIR} ${OPENAL_ALUT_INCLUDE_DIR})
  set (OPENAL_LIBRARIES ${OPENAL_openal_LIBRARY} ${OPENAL_alut_LIBRARY})
else (WIN32)
  message (FATAL_ERROR "Unable to identify target operating system!")

endif (WIN32)

set (FIND_OPENAL_LOADED ON)
endif (NOT FIND_OPENAL_LOADED)

include(FindPackageHandleStandardArgs)
find_package_handle_standard_args(OpenAL DEFAULT_MSG OPENAL_INCLUDE_DIR OPENAL_LIBRARIES)
